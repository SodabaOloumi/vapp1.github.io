{"remainingRequest":"/home/sodaba/vapp1.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/sodaba/vapp1.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/sodaba/vapp1.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sodaba/vapp1.github.io/src/views/addPatient.vue?vue&type=template&id=7ae51284&class=body&","dependencies":[{"path":"/home/sodaba/vapp1.github.io/src/views/addPatient.vue","mtime":1638379951285},{"path":"/home/sodaba/vapp1.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sodaba/vapp1.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/sodaba/vapp1.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sodaba/vapp1.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}